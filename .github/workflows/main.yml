# .github/workflows/convert-fbx.yml

name: Convert FBX to glb and STL

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # 1. Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Downloads the FBX2glTF converter
      - name: Download FBX2glTF
        run: wget https://github.com/facebookincubator/FBX2glTF/releases/download/v0.9.7/FBX2glTF-linux-x64 -O FBX2glTF

      # 3. Makes the downloaded file executable
      - name: Make converter executable
        run: chmod +x FBX2glTF

      # 4. Get the short commit SHA for unique output naming
      - name: Get short commit SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # 5. Convert FBX to glb
      - name: Convert FBX to glb
        run: |
          ./FBX2glTF --binary --draco --verbose \
            --input sidekick_case.fbx \
            --output sidekick_case_${SHORT_SHA}.glb

      # 6. Setup Node.js for 3dconvert.mjs
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 7. Install dependencies if needed (update this if 3dconvert.mjs needs any packages)
      # - name: Install Dependencies
      #   run: npm ci

      # 8. Convert FBX to STL using 3dconvert.mjs
      - name: Convert FBX to STL
        run: |
          git clone https://github.com/meetsidekick/3DPrintUtils
          cd 3DPrintUtils
          npm install @loaders.gl/core @loaders.gl/gltf dom-urls fbx2gltf filereader gltf-js-utils three three-stl-loader yargs
          node --experimental-specifier-resolution=node src/3dconvert.mjs sidekick_case.fbx -t stl -o sidekick_case_${SHORT_SHA}.stl
          mv sidekick_case_*.stl ../..

      # 9. Upload the generated .glb and .stl files as artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: converted-models
          path: |
            sidekick_case_*.glb
            sidekick_case_*.stl

      # 10. Create a GitHub Release and upload the files
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Model Release ${{ github.sha }}"
          tag_name: build-${{ github.run_number }}-${{ github.sha }}
          files: |
            sidekick_case_*.glb
            sidekick_case_*.stl
          prerelease: true
